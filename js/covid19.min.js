function toggleStuff(element,id){element.className="far fa-"+(-1==element.className.indexOf("edit")?"edit":"save");var input=document.getElementById(id);input.toggleAttribute("readonly"),input.className="mr-1 form-control"+(-1==input.className.indexOf("plaintext")?"-plaintext":"")}function COVID19(){var confirmedUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv",confirmedGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",fatalUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv",fatalGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv";function SliceData(x,startIndex,endIndex){var _a;return startIndex>(null!==(_a=null==x?void 0:x.length)&&void 0!==_a?_a:-1)?null!=x?x:[]:endIndex<x.length?x.slice(startIndex,endIndex):x.slice(startIndex)}var chartOptions={confirmed:{type:"line",getDescription:function(location,options){var currentCases,percentage;return location.GetPopulation()?(location.GetRange("confirmed",options.startDateIndex,options.endDateIndex)/location.population*100).toFixed(2)+"% of Population":null}},fatality:{type:"line",getDescription:function(location,options){var currentCases,percentage;return location.GetPopulation()?(location.GetRange("fatality",options.startDateIndex,options.endDateIndex)/location.population*100).toFixed(2)+"% of Population":null}},default:{type:"bar",getDescription:function(location,options,data){return"Total: "+data[data.length-1]}},DerivativeData:{type:"bar",getDescription:function(location,options,data){var sum=0,average;return data.forEach((function(x){return sum+=x})),"Avarage: "+(sum/data.length).toFixed(2)}},RatioData:{type:"bar",getDescription:function(location,options,data){var total=0;data.forEach((function(x){return total+=x}));var average=total/data.length,percentage=100*average;return"Average Ratio: "+average.toFixed(2)+" ("+percentage.toFixed(2)+"%)"},isRatio:!0}},timeKey="TimeData",ratioKey="RatioData",derivativeKey="`",MyLocation=function(){function MyLocation(name,key,dataKey,labels,data,dataKeys,children,childrenNames){labels instanceof Array&&dataKey?(this.labels={},this.labels[dataKey]=labels):this.labels=null!=labels?labels:{},data instanceof Array&&dataKey?(this.data={},this.data[dataKey]=data):this.data=null!=data?data:{},this.dataKeys=(null==dataKeys?void 0:dataKeys.length)?dataKeys:dataKey?[dataKey]:[],this.name=name,this.key=key,this.children=null!=children?children:{},this.names=null!=childrenNames?childrenNames:["All"]}return MyLocation.prototype.GetData=function(key,options){var _this=this,data;if(this.dataKeys.indexOf(key)<0&&this.dataKeys.push(key),key.substr(-ratioKey.length)==ratioKey)return this.GetRatioData(key,options);if(this.data[key]&&-1==key.indexOf(ratioKey))return this.populationChecked||this.GetPopulation(),this.data[key];if(key.substr(-timeKey.length)==timeKey){var parentKey=key.substr(0,key.length-timeKey.length);return this.GetTimeData(parentKey,options)}if("`"==key.substr(-"`".length)){var parentKey=key.substring(0,key.length-"`".length);return this.GetDerivedData(parentKey,options)}return this.names.filter((function(x){return"All"!=x})).forEach((function(x){var _a,childData=_this.children[x].GetData(key);(null===(_a=_this.labels[key])||void 0===_a?void 0:_a.length)||(_this.labels[key]=_this.children[x].labels[key]),(null==childData?void 0:childData.length)&&(data?childData.forEach((function(val,i){return data[i]+=val})):data=childData.map((function(x){return x})))})),this.data[key]=data,this.data[key]},MyLocation.prototype.GetDerivedData=function(key,options){for(var data=this.GetData(key,options),derivedData=[],i=1;i<data.length;i++){var temp=data[i]-data[i-1];derivedData.push(temp)}return this.data[key+"`"]=derivedData,this.labels[key+"`"]=this.labels[key],this.data[key+"`"]},MyLocation.prototype.GetTimeData=function(key,options){for(var data=this.GetData(key,options),timeData=[],i=1;i<data.length;i++){var temp=data[i]-data[i-1];timeData.push(temp>0?temp:0)}return this.data[key+"TimeData"]=timeData,this.data[key+"TimeData"]},MyLocation.prototype.GetRatioData=function(key,options){var keys=key.substr(0,key.length-ratioKey.length).split(";");if(keys.length>2){var i=void 0,temp1="";for(i=0;i<keys.length/2;i++)temp1+=keys[i]+";";temp1=temp1.substr(0,temp1.length-1);for(var temp2="";i<keys.length;i++)temp2+=keys[i]+";";keys=[temp1,temp2=temp2.substr(0,temp2.length-1)]}var data1=this.GetData(keys[0],options),data2=this.GetData(keys[1],options);this.data[key]=[];var length=this.labels[keys[0]].length;if(length!=this.labels[keys[1]].length)return this.data[key];for(var i=0;i<length;i++)if(this.labels[keys[0]][i]!=this.labels[keys[1]][i])return this.data[key];this.labels[key]=this.labels[keys[0]];for(var range=options.range,offset=options.offset,i=0;i<=Math.min(data1.length,data2.length)-range-offset;i++){var d1=data1.slice(i,i+range).reduce((function(a,b){return a+b})),d2=data2.slice(i+offset,i+offset+range).reduce((function(a,b){return a+b})),ratio=d2?d1/d2:d1;this.data[key].push(ratio)}return this.data[key]},MyLocation.prototype.GetPopulation=function(){var _this=this;return this.populationChecked||this.population?this.population:(this.populationChecked=!0,this.population=0,this.names.filter((function(x){return"All"!=x})).forEach((function(x){_this.population+=_this.children[x].GetPopulation()})),this.population)},MyLocation.prototype.GetRange=function(key,startIndex,endIndex){endIndex>=this.GetData(key).length&&(endIndex=this.data[key].length-1);var range=startIndex>0?this.data[key][endIndex]-this.data[key][startIndex-1]:this.data[key][endIndex];return range>0?range:startIndex>0?this.data[key][startIndex-1]:0},MyLocation}();function randomColorString(){function randRGB(){return Math.floor(255*Math.random())-1}return"rgb("+randRGB()+","+randRGB()+","+randRGB()+")"}var MyChart=function(){function MyChart(key,name,location,options){var _a;this.key=key,this.name=name,this.id=Date.now(),this.description=null,ko.track(this),this.options=null!==(_a=chartOptions[key])&&void 0!==_a?_a:key.substr(-ratioKey.length)==ratioKey?chartOptions.RatioData:"`"==key.substr(-"`".length)?chartOptions.DerivativeData:chartOptions.default;var self=this;setTimeout((function(){self.createChart(),self.update(location,options)}),0)}return MyChart.prototype.createChart=function(){var ctx=document.getElementById(this.key+this.id),color=randomColorString();this.chart=new Chart(ctx,{data:{datasets:[{backgroundColor:color,borderColor:color}]},type:this.options.type,options:{legend:{display:!1}}})},MyChart.prototype.update=function(location,options){var data=SliceData(location.GetData(this.key,options),options.startDateIndex,options.endDateIndex);this.chart.data.datasets[0].data=data,this.options.getDescription&&(this.description=this.options.getDescription(location,options,data)),this.chart.data.labels=SliceData(location.labels[this.key],options.startDateIndex,options.startDateIndex+data.length),this.chart.update()},MyChart}(),ChartGroup=function(){function ChartGroup(vm){this.id=vm.lastID++,this.selectedCountryName="",this.selectedStateName="",this.selectedCityName="",this.selectedCity=null,this.selectedState=null,this.selectedCountry=null,this.offset=5,this.range=5,this.startDateIndex=42,this.endDateIndex=chartDates.length-1,this.charts=[],this.locationRoot=vm,ko.track(this)}return ChartGroup.prototype.getSupportedCharts=function(){var _this=this;return supportedCharts.filter((function(x){return!_this.charts.some((function(y){return y.key==x.key}))}))},ChartGroup.prototype.addChart=function(key,name){var location=this.getSelectedLocation(),data=location.GetData(key,this),endDateIndex=this.endDateIndex;data&&(this.endDateIndex<this.startDateIndex||this.endDateIndex-this.startDateIndex>=data.length)&&(endDateIndex=data.length-1,this.endDateIndex<0&&(this.endDateIndex=endDateIndex)),this.charts.push(new MyChart(key,name,location,this))},ChartGroup.prototype.removeChart=function(chart){this.charts.remove(chart),this.charts.length||this.locationRoot.chartGroups.remove(this)},ChartGroup.prototype.updateCharts=function(){var _this=this,_a,location=this.getSelectedLocation();(null===(_a=this.charts)||void 0===_a?void 0:_a.length)&&this.charts.forEach((function(x){x.update(location,_this)}))},ChartGroup.prototype.getSelectedLocation=function(){var _a,_b,_c;return this.selectedCountry=this.locationRoot.children[this.selectedCountryName],this.selectedState=this.selectedCountry.children[this.selectedStateName],this.selectedCity=null===(_a=this.selectedState)||void 0===_a?void 0:_a.children[this.selectedCityName],null!==(_c=null!==(_b=this.selectedCity)&&void 0!==_b?_b:this.selectedState)&&void 0!==_c?_c:this.selectedCountry},ChartGroup}(),supportedCharts=[],chartDates,ViewModel;return new(function(){function ViewModel(){var _this=this;this.children={},this.chartGroups=[],this.names=[],this.lastID=0,this.countdown=3,this.selectedTab="Basic",this.temp="2",this.dates=chartDates,setTimeout((function(){return _this.getDates(_this)}),0),setTimeout((function(){return _this.getData(_this)}),0),ko.track(this),ko.applyBindings(this)}return ViewModel.prototype.addGroup=function(){var chartGroup=new ChartGroup(this);return chartGroup.selectedCountryName="US",this.chartGroups.push(chartGroup),chartGroup},ViewModel.prototype.addLocation=function(location){var key=location.key.split(", ").filter((function(x){return x})).reverse(),name=key.pop(),parent=this,currentKey="";key.forEach((function(name){currentKey=currentKey?name+", "+currentKey:name,parent.children[name]||(parent.names.push(name),parent.children[name]=new MyLocation(name,currentKey)),parent=parent.children[name]})),parent.children[name]?location.dataKeys.forEach((function(dataKey){parent.children[name].data[dataKey]||parent.children[name].dataKeys.push(dataKey),parent.children[name].data[dataKey]=location.data[dataKey],parent.children[name].labels[dataKey]=location.labels[dataKey]})):(parent.names.push(name),parent.children[name]=location)},ViewModel.prototype.getShareLink=function(){var query=this.chartGroups.map((function(x){var _a,_b,charts=x.charts.map((function(y){return y.key+"]"+y.name})).join(","),location=null!==(_b=null!==(_a=x.selectedCity)&&void 0!==_a?_a:x.selectedState)&&void 0!==_b?_b:x.selectedCountry;return charts+"["+(null==location?void 0:location.key)})).join("|");return window.location.origin+window.location.pathname+"?charts="+encodeURIComponent(query)},ViewModel.prototype.getDates=function(vm){if(!chartDates){chartDates=[];for(var tempDate=moment(new Date("1/22/20"));tempDate<moment();)chartDates.push(tempDate.format("l")),tempDate.add(1,"days");vm.dates=chartDates}return chartDates},ViewModel.prototype.getData=function(vm){var dataOptions=[{url:confirmedGlobalDataUrl,indexParams:[4,2,3,0,1],dataKey:"confirmed",getData:getCOVID19JohnsHopkinsData},{url:confirmedUSDataUrl,indexParams:[11,8,9,6,7,5],dataKey:"confirmed",getData:getCOVID19JohnsHopkinsData},{url:fatalGlobalDataUrl,indexParams:[4,2,3,0,1],dataKey:"fatality",getData:getCOVID19JohnsHopkinsData},{url:fatalUSDataUrl,indexParams:[12,8,9,6,7,5,11],dataKey:"fatality",getData:getCOVID19JohnsHopkinsData},{url:"https://data.cdc.gov/resource/nr4s-juj3.json",getData:getUSCovidDataAge}];vm.countdown=dataOptions.length,dataOptions.forEach((function(x){return x.getData(x,vm)}))},ViewModel.prototype.setup=function(){var _this=this;if(0==--this.countdown){var query=new URLSearchParams(window.location.search);if(!query.has("charts")){var chartGroup=this.addGroup();return chartGroup.addChart("confirmed","Total Confirmed"),chartGroup.addChart("fatality","Total Fatal"),this.chartGroups.length}return query.get("charts").split("|").forEach((function(groupStr){var _a,_b=groupStr.split("["),chartsStr=_b[0],locationKey=_b[1],group=_this.addGroup();_a=locationKey.split(", ").reverse(),group.selectedCountryName=_a[0],group.selectedStateName=_a[1],group.selectedCityName=_a[2],chartsStr.split(",").forEach((function(chartStr){var _a=chartStr.split("]"),key=_a[0],name=_a[1];group.addChart(key,name)}))})),this.chartGroups.length}},ViewModel}());function getUSCovidDataAge(options,vm){var ageGroups=["0-4 years","5-18 years","19-44 years","45-64 years","65-74 years",">75 years"],ageData=[],request=new XMLHttpRequest;function getData(data){"Age"==data.indicator&&"All ages"!=data.age_group&&(ageData[ageGroups.indexOf(data.age_group)]=data.covid_19_deaths)}request.open("GET",options.url,!0),request.onload=function(e){var temp;4===request.readyState&&(200===request.status?(JSON.parse(request.responseText).forEach(getData),vm.addLocation(new MyLocation("US","US","covidAge",ageGroups,ageData)),supportedCharts.push({name:"COVID-19",key:"covidAge"}),vm.setup()):console.error(request.statusText))},request.onerror=function(e){console.error(request.statusText),vm.setup()},request.send(null)}function getOverallMortalityData(options,vm){var allAges="All ages",illnessesString="Illnesses",ageGroups=["Under 1 year","1-4 years","5-14 years","15-24 years","25-34 years","35-44 years","45-54 years","55-64 years","65-74 years","75-84 years","85 years and over"],illnesses=["COVID-19","Pneumonia","Pneumonia and COVID-19","Influenza"],dataKeyes=ageGroups.concat(illnesses);dataKeyes.push("All Ages"),dataKeyes.forEach((function(key){return supportedCharts.push({key:key,name:key})}));var totalText=" Total",labels={};ageGroups.forEach((function(ageGroup){return labels[ageGroup]=illnesses})),illnesses.forEach((function(illness){return labels[illness]=ageGroups})),labels["All Ages"]=illnesses;var ageGroupData={},stateNames=[],request=new XMLHttpRequest;function addLocations(name){if("United States"!=name){var parentKey=name+", US";vm.addLocation(new MyLocation(name,parentKey,null,labels,ageGroupData[name],dataKeyes))}else vm.addLocation(new MyLocation("US","US",null,labels,ageGroupData[name],dataKeyes))}function getDeathArr(row){var t=[row.covid_19_deaths,row.pneumonia_deaths,row.pneumonia_and_covid_19_deaths,row.influenza_deaths].map((function(x){var temp=x?parseInt(x):0;return temp}));return t[0]-=t[2],t[1]-=t[2],t}function getData(row){var _a;if(" Total"!=row.state.substr(-" Total".length)&&"All"!=row.sex&&row.age_group!=allAges){ageGroupData[row.state]||(ageGroupData[row.state]={},illnesses.forEach((function(val){ageGroupData[row.state][val]=[],ageGroups.forEach((function(x){return ageGroupData[row.state][val].push(0)}))})),stateNames.push(row.state),ageGroupData[row.state]["All Ages"]=[0,0,0,0]);var tempData=getDeathArr(row);(null===(_a=ageGroupData[row.state][row.age_group])||void 0===_a?void 0:_a.length)?ageGroupData[row.state][row.age_group].forEach((function(x,i,arr){return arr[i]+=tempData[i]})):ageGroupData[row.state][row.age_group]=tempData}}request.open("GET",options.url,!0),request.onload=function(e){var temp;4===request.readyState&&(200===request.status?(JSON.parse(request.responseText).forEach(getData),stateNames.forEach((function(name){ageGroups.forEach((function(ageGroup,agi){ageGroupData[name][ageGroup].forEach((function(val,index){ageGroupData[name][illnesses[index]][agi]=val,ageGroupData[name]["All Ages"][index]+=val}))}))})),stateNames.forEach(addLocations),vm.setup()):console.error(request.statusText))},request.onerror=function(e){console.error(request.statusText),vm.setup()},request.send(null)}function getCOVID19JohnsHopkinsData(options,vm){var request=new XMLHttpRequest;function GetLocation(locationData,dataKey,indexes){var possibleNames,latitude,longitude,population=0,data;if(locationData.length>4){var numStartIndex=indexes[0],latitudeIndex=indexes[1],longitudeIndex=indexes[2],stateIndex=indexes[3],countryIndex=indexes[4],cityIndex=indexes[5],populationIndex=indexes[6];possibleNames=[cityIndex,stateIndex,countryIndex].filter((function(x){return x>=0})).map((function(x){return locationData[x]})).filter((function(x){return x})).map((function(x){return x.replace(/;/g,",")})),latitude=parseInt(locationData[latitudeIndex]),longitude=parseInt(locationData[longitudeIndex]),population=0,populationIndex&&(population=parseInt(locationData[populationIndex])),data=locationData.slice(numStartIndex).map((function(x){return parseInt(x)}))}else possibleNames=locationData;var location=new MyLocation(possibleNames[0],possibleNames.join(", "),dataKey,chartDates,data);return location.population=population,location.longitude=longitude,location.latitude=latitude,location}request.open("GET",options.url,!0),request.onload=function(e){if(4===request.readyState)if(200===request.status){for(var already=!1,i=0;i<supportedCharts.length&&!(already="confirmed"==supportedCharts[i].key);i++);already||(supportedCharts.push({name:"Total Confirmed",key:"confirmed"}),supportedCharts.push({name:"Total Fatal",key:"fatality"}),supportedCharts.push({name:"Confirmed Cases / Day",key:"confirmed`"}),supportedCharts.push({name:"Fatal Cases / Day",key:"fatality`"}),supportedCharts.push({name:"Mortality",key:"fatality;confirmedRatioData"}),supportedCharts.push({name:"Mortality / Day",key:"fatality`;confirmed`RatioData"})),GetCSVData(request.responseText).slice(1).filter((function(x){return null==x?void 0:x.length})).map((function(data){return GetLocation(data,options.dataKey,options.indexParams)})).forEach((function(location){return vm.addLocation(location)})),vm.setup()}else console.error(request.statusText)},request.onerror=function(e){console.error(request.statusText),vm.setup()},request.send(null)}function GetCSVData(locationCSV){var temp=locationCSV.split('"');locationCSV="";for(var i=0;i<temp.length;i++)locationCSV+=i%2?temp[i].replace(/\,/g,"$|||$"):temp[i];return locationCSV.split(/\r?\n|\r/).map((function(str){return str.split(",").map((function(x){return null==x?void 0:x.replace(/\$\|\|\|\$/g,",")}))}))}}