const confirmedUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv",confirmedGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",fatalUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv",fatalGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv";function ViewModel(){var dataKeys=["data","timeData","fatalityData","fatalityTimeData","fatalityRatioData"],basicDataKeys=["data","fatalityData"],chartOptions={data:{type:"line",dataAction:(x,y)=>x.slice(y.startDateIndex,1*y.endDateIndex+1)},timeData:{type:"bar",dataAction:(x,y)=>x.slice(y.startDateIndex,1*y.endDateIndex+1)},fatalityData:{type:"bar",dataAction:(x,y)=>x.slice(y.startDateIndex,1*y.endDateIndex+1)},fatalityTimeData:{type:"bar",dataAction:(x,y)=>x.slice(y.startDateIndex,1*y.endDateIndex+1)},fatalityRatioData:{type:"bar",maxY:25}};function randomColorString(){var r,g,b;return"rgb("+(Math.floor(255*Math.random())-1)+","+(Math.floor(255*Math.random())-1)+","+(Math.floor(255*Math.random())-1)+")"}function CreatePlot(self,dataKey,data,title,subDates){var options=chartOptions[dataKey],ctx=document.getElementById(dataKey+self.id),color=randomColorString(),dataset={data:data,backgroundColor:color,borderColor:color},chart;return options.dataAction&&(dataset.data=options.dataAction(data,self)),new Chart(ctx,{type:options.type,data:{labels:subDates,datasets:[dataset]},options:{legend:{display:!1},title:{display:!0,text:title}}})}function GetPopulation(location){return location.populationChecked||location.population?location.population:(location.populationChecked=!0,location.population=0,location.names.filter(x=>"All"!=x).forEach(x=>{location.population+=GetPopulation(location[x])}),location.population)}function GetData(location,dataKey){return location[dataKey]?(location.populationChecked||GetPopulation(location),location[dataKey]):(location.populationChecked=!0,location.population=0,location[dataKey]=[],location.names.filter(x=>"All"!=x).forEach(x=>{var childData=GetData(location[x],dataKey);location[dataKey].length||childData.forEach(val=>location[dataKey].push(0));for(var i=0;i<location[dataKey].length;i++)location[dataKey][i]+=1*childData[i];location.population+=location[x].population}),location[dataKey])}function GetPopulation(location){return location.population||location.populationChecked?(location.population*=1,location.population):(location.population=0,location.populationChecked=!0,location.names.filter(x=>"All"!=x).forEach(x=>{var pop=GetPopulation(location[x]);location.population+=pop}),location.population*=1,location.population)}function GetLocation(key,container){var location=container;return key.split(", ").reverse().forEach(x=>{location=location[x]}),location}function GetFatalityLocation(key){var faltalityLocation=vm.fatalCases;return key.split(", ").reverse().forEach(x=>{faltalityLocation=faltalityLocation[x]}),faltalityLocation}function GetTimeData(data){for(var timeData=[],i=1;i<data.length;i++){var temp=data[i]-data[i-1];temp<0&&(temp=0),timeData.push(temp)}return timeData}function UpdateChart(self,chart,dataKey,data,title,subDates){var options=chartOptions[dataKey];options.dataAction?chart.data.datasets[0].data=options.dataAction(data,self):chart.data.datasets[0].data=data,chart.options.title.text=title,chart.data.labels=subDates,chart.update()}function UpdateCharts(self){var location;self.selectedCountry=vm.locations[self.selectedCountryName],self.selectedState=self.selectedCountry[self.selectedStateName],self.selectedState?self.selectedCity=self.selectedState[self.selectedCityName]:self.selectedCity=null,location=self.selectedCity?self.selectedCity:self.selectedState?self.selectedState:self.selectedCountry,basicDataKeys.forEach(x=>GetData(location,x)),location.timeData||(location.timeData=GetTimeData(location.data),location.fatalityTimeData=GetTimeData(location.fatalityData)),location.fatalityRatioData=[];for(let index=1*self.startDateIndex;index<=1*self.endDateIndex;index++){let confirmed=0,fatal=0,offset=1*self.offset,range=1*self.range,ratio;for(let i=index;i<index+range;i++)confirmed+=location.timeData[i],fatal+=location.fatalityTimeData[i+offset];ratio=confirmed?fatal/confirmed*100:fatal,location.fatalityRatioData.push(1*ratio.toFixed(2))}var totalCases=location.data[self.endDateIndex]-location.data[1*self.startDateIndex-1],totalFatalCases=location.fatalityData[self.endDateIndex]-location.fatalityData[1*self.startDateIndex-1];0==self.startDateIndex&&(totalCases=location.data[self.endDateIndex],totalFatalCases=location.fatalityData[self.endDateIndex]);var totalFatality=totalFatalCases/totalCases*100,popTitle=location.name+" Total Cases",popPercentage;location.population&&(popTitle+=" ("+(totalCases/location.population*100).toFixed(2)+"% of Population)");var subDates=vm.dates.slice(self.startDateIndex,1*self.endDateIndex+1);titles={data:popTitle,timeData:location.name+" Confirmed Cases ("+totalCases+" total)",fatalityTimeData:location.name+" Fatal Cases ("+totalFatalCases+" total)",fatalityRatioData:location.name+" % Cases Fatal ("+totalFatality.toFixed(2)+"% of all cases fatal)",fatalityData:location.name+" Total Fatal Cases"},0==self.charts.length?dataKeys.forEach(x=>{self.charts.push({name:x}),self.charts[self.charts.length-1].chart=CreatePlot(self,x,location[x],titles[x],subDates)}):self.charts.forEach(x=>UpdateChart(self,x.chart,x.name,location[x.name],titles[x.name],subDates))}function ChartGroup(){var self={id:vm.lastID++,selectedCountryName:"",selectedStateName:"",selectedCityName:"",selectedCountry:{},selectedState:{},selectedCity:{},offset:5,range:5,startDateIndex:42,endDateIndex:vm.locations.Ireland.data.length-1,charts:[],updateCharts:function(){UpdateCharts(self)}};return ko.track(self),self}function LocationCollection(){var self;return{names:["All"]}}function GetLocationData(locationCSV){var temp=locationCSV.split('"');locationCSV="";for(var i=0;i<temp.length;i++)locationCSV+=i%2?temp[i].replace(/,/g,";"):temp[i];return locationCSV.split(",")}function GetLocation(locationData,dataKey,indexes){var cityIndex=-1;indexes.length>=6&&(cityIndex=5);var possibleNames=[cityIndex,indexes[3],indexes[4]].filter(x=>x>=0).map(x=>locationData[x]).filter(x=>x).map(x=>x.replace(/;/g,",")),population=0;indexes.length>=7&&(population=1*locationData[indexes[6]]);var location={name:possibleNames[0],latitude:1*locationData[indexes[1]],longitude:1*locationData[indexes[2]],population:1*population,key:possibleNames.join(", "),names:["All"]};return location[dataKey]=locationData.slice(indexes[0]).map(x=>1*x),location}function AddLocation(location,dataKey){var key=location.key.split(", ").reverse().filter(x=>x),i,parent=vm.locations,parentKey="";for(i=0;i<key.length-1;i++)parentKey=parentKey?key[i]+", "+parentKey:key[i],parent[key[i]]||(parent.names.push(key[i]),parent[key[i]]={names:["All"],name:key[i],key:parentKey}),parent=parent[key[i]];parent.names.push(key[i]),parent[key[i]]?(parent[key[i]][dataKey]=location[dataKey],parent[key[i]].population||(parent[key[i]].population=location.population)):parent[key[i]]=location}function AddLocations(csv,dataKey,indexes){csv.split("\n").slice(1).filter(x=>x).forEach(data=>{var location;AddLocation(GetLocation(GetLocationData(data),dataKey,indexes),dataKey)})}var countdown=3;function Start(){if(0>=countdown--){var chartGroup=ChartGroup();chartGroup.selectedCountryName="US",vm.chartGroups.push(chartGroup),chartGroup.updateCharts()}}const vm={locations:LocationCollection(),chartGroups:[],dates:[],lastID:0,addGroup:Start};function getCOVID19JohnsHopkinsData(options){$.get(options.url).done(result=>{AddLocations(result,options.dataKey,options.indexParams),Start()})}var dataOptions;[{url:confirmedGlobalDataUrl,indexParams:[4,2,3,0,1],storage:vm.locations,dataKey:"data",getData:getCOVID19JohnsHopkinsData},{url:confirmedUSDataUrl,indexParams:[11,8,9,6,7,5],storage:vm.locations,dataKey:"data",getData:getCOVID19JohnsHopkinsData},{url:fatalGlobalDataUrl,indexParams:[4,2,3,0,1],storage:vm.locations,dataKey:"fatalityData",getData:getCOVID19JohnsHopkinsData},{url:fatalUSDataUrl,indexParams:[12,8,9,6,7,5,11],storage:vm.locations,dataKey:"fatalityData",getData:getCOVID19JohnsHopkinsData}].forEach(x=>x.getData(x));for(var tempDate=moment(new Date("1/22/20"));tempDate<moment();)vm.dates.push(tempDate.format("l")),tempDate.add(1,"days");return ko.track(vm.locations),ko.track(vm),ko.applyBindings(vm),vm}