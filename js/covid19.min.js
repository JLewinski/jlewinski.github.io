const confirmedUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv",confirmedGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",fatalUSDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv",fatalGlobalDataUrl="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv";function randomColorString(){var r,g,b;return"rgb("+(Math.floor(255*Math.random())-1)+","+(Math.floor(255*Math.random())-1)+","+(Math.floor(255*Math.random())-1)+")"}function CreatePlot(elementId,data,title,subDates,type){var ctx=document.getElementById(elementId),color=randomColorString(),dataset;return type||(type="bar"),new Chart(ctx,{type:type,data:{labels:subDates,datasets:[{data:data,backgroundColor:color,borderColor:color}]},options:{legend:{display:!1},title:{display:!0,text:title}}})}function GetData(location){return location.data?location.data:(location.populationChecked=!0,location.population=0,location.data=Array(location[location.names[Math.floor(location.names.length/2)]].data.length).fill(0),location.names.filter(x=>"All"!=x).forEach(x=>{var childData=GetData(location[x]);location.data.length||childData.forEach(val=>location.data.push(0));for(var i=0;i<location.data.length;i++)location.data[i]+=1*childData[i];location.population+=location[x].population}),location.data)}function GetPopulation(location){return location.population||location.populationChecked?(location.population*=1,location.population):(location.population=0,location.populationChecked=!0,location.names.filter(x=>"All"!=x).forEach(x=>{var pop=GetPopulation(location[x]);location.population+=pop}),location.population*=1,location.population)}function GetLocation(key,container){var location=container;return key.split(", ").reverse().forEach(x=>{location=location[x]}),location}function GetFatalityLocation(key){var faltalityLocation=vm.fatalCases;return key.split(", ").reverse().forEach(x=>{faltalityLocation=faltalityLocation[x]}),faltalityLocation}function GetTimeData(data){for(var timeData=[],i=1;i<data.length;i++){var temp=data[i]-data[i-1];temp<0&&(temp=0),timeData.push(temp)}return timeData}function UpdateChart(chart,data,title,subDates){chart.data.datasets[0].data=data,chart.options.title.text=title,chart.data.labels=subDates,chart.update()}function UpdateCharts(self){var location;if(self.selectedCountry=vm.confirmedCases[self.selectedCountryName],self.selectedState=self.selectedCountry[self.selectedStateName],self.selectedState?self.selectedCity=self.selectedState[self.selectedCityName]:self.selectedCity=null,GetData(location=self.selectedCity?self.selectedCity:self.selectedState?self.selectedState:self.selectedCountry),location.timeData||(location.timeData=GetTimeData(GetData(location))),!location.fatalityData){var fatalLocation=GetFatalityLocation(location.key);location.fatalityData=GetData(fatalLocation),location.population=GetPopulation(fatalLocation),location.fatalityTimeData=GetTimeData(location.fatalityData)}location.fatalityRatioData=[];for(let index=1*self.startDateIndex;index<=1*self.endDateIndex;index++){let confirmed=0,fatal=0,offset=1*self.offset,range=1*self.range,ratio;for(let i=index;i<index+range;i++)confirmed+=location.timeData[i],fatal+=location.fatalityTimeData[i+offset];ratio=confirmed?fatal/confirmed*100:fatal,location.fatalityRatioData.push(1*ratio.toFixed(2))}var totalCases=location.data[self.endDateIndex]-location.data[1*self.startDateIndex-1],totalFatalCases=location.fatalityData[self.endDateIndex]-location.fatalityData[1*self.startDateIndex-1];0==self.startDateIndex&&(totalCases=location.data[self.endDateIndex],totalFatalCases=location.fatalityData[self.endDateIndex]);var confirmedTitle=location.name+" Confirmed Cases ("+totalCases+" total)",fatalityTitle=location.name+" Fatal Cases ("+totalFatalCases+" total)",totalFatality=totalFatalCases/totalCases*100,fatalityRatioTitle=location.name+" % Cases Fatal ("+totalFatality.toFixed(2)+"% of all cases fatal)",popTitle=location.name+" Total Cases",popPercentage;location.population&&(popTitle+=" ("+(totalCases/location.population*100).toFixed(2)+"% of Population)");var subDates=vm.dates.slice(self.startDateIndex,1*self.endDateIndex+1);self.confirmedChart?(UpdateChart(self.confirmedChart,location.timeData.slice(self.startDateIndex,1*self.endDateIndex+1),confirmedTitle,subDates),UpdateChart(self.fatalityChart,location.fatalityTimeData.slice(self.startDateIndex,1*self.endDateIndex+1),fatalityTitle,subDates),UpdateChart(self.fatalityRatioChart,location.fatalityRatioData,fatalityRatioTitle,subDates),UpdateChart(self.populationChart,location.data.slice(self.startDateIndex,1*self.endDateIndex+1),popTitle,subDates)):(self.confirmedChart=CreatePlot("confirmedChart"+self.id,location.timeData.slice(self.startDateIndex,1*self.endDateIndex+1),confirmedTitle,subDates),self.fatalityChart=CreatePlot("fatalityChart"+self.id,location.fatalityTimeData.slice(self.startDateIndex,1*self.endDateIndex+1),fatalityTitle,subDates),self.fatalityRatioChart=CreatePlot("fatalityRatioChart"+self.id,location.fatalityRatioData,fatalityRatioTitle,subDates),self.fatalityRatioChart.options.scales.yAxes[0].scaleLabel.labelString="Percent Fatal",self.fatalityRatioChart.options.scales.yAxes[0].scaleLabel.display=!0,self.fatalityRatioChart.update(),self.populationChart=CreatePlot("populationChart"+self.id,location.data.slice(self.startDateIndex,1*self.endDateIndex+1),popTitle,subDates,"line"))}function ChartGroup(){var self={id:vm.lastID++,selectedCountryName:"",selectedStateName:"",selectedCityName:"",selectedCountry:{},selectedState:{},selectedCity:{},offset:5,range:5,startDateIndex:42,endDateIndex:vm.confirmedCases.Ireland.data.length-1,updateCharts:function(){UpdateCharts(self)}};return ko.track(self),self}function LocationCollection(){var self={names:["All"],addLocation:function(location){var key=location.key.split(", ").reverse().filter(x=>x),i,parent=self,parentKey="";for(i=0;i<key.length-1;i++)parentKey=parentKey?key[i]+", "+parentKey:key[i],parent[key[i]]||(parent.names.push(key[i]),parent[key[i]]={names:["All"],name:key[i],key:parentKey}),parent=parent[key[i]];parent.names.push(key[i]),parent[key[i]]=location}};return self}function GetLocationData(locationCSV){var temp=locationCSV.split('"');locationCSV="";for(var i=0;i<temp.length;i++)locationCSV+=i%2?temp[i].replace(/,/g,";"):temp[i];return locationCSV.split(",")}function GetLocation(locationData,numStartIndex,latitudeIndex,longitudeIndex,stateIndex,countryIndex,cityIndex,populationIndex){var possibleNames=[cityIndex,stateIndex,countryIndex].filter(x=>x>=0).map(x=>locationData[x]).filter(x=>x).map(x=>x.replace(/;/g,",")),population;population=populationIndex?1*locationData[populationIndex]:0;var location={name:possibleNames[0],latitude:1*locationData[latitudeIndex],longitude:1*locationData[longitudeIndex],population:1*population,key:possibleNames.join(", "),data:locationData.slice(numStartIndex).map(x=>1*x),names:["All"]};return location.children=location,location}function AddLocations(csv,storage,numStartIndex,latitudeIndex,longitudeIndex,stateIndex,countryIndex,cityIndex,populationIndex){csv.split("\n").slice(1).filter(x=>x).forEach(data=>{var location=GetLocation(GetLocationData(data),numStartIndex,latitudeIndex,longitudeIndex,stateIndex,countryIndex,cityIndex,populationIndex);storage.addLocation(location)})}var countdown=3,vm;function Start(){if(0>=countdown--){var chartGroup=ChartGroup();chartGroup.selectedCountryName="US",vm.chartGroups.push(chartGroup),chartGroup.updateCharts()}}function ViewModel(){return vm={confirmedCases:LocationCollection(),fatalCases:LocationCollection(),chartGroups:[],dates:[],lastID:0,addGroup:Start}}